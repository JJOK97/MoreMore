plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
	id "org.sonarqube" version "4.0.0.2929"
}

sonar {
	properties {
		property "sonar.projectKey", "S11P21A605"
	}
}


ext {
	springCloudVersion = "2023.0.3"
}


group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	//mybatis
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
	implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

	// client config
	implementation 'org.springframework.cloud:spring-cloud-starter-config'

	//aws sdk v2
	implementation platform('software.amazon.awssdk:bom:2.17.230')
	implementation 'software.amazon.awssdk:s3'

	//lombok
	implementation 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	//feign
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
	//mapper
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'  // 추가된 부분

	//h2
	runtimeOnly 'com.h2database:h2'
	//mysql
	runtimeOnly 'com.mysql:mysql-connector-j'

	//aws sdk v2
	implementation platform('software.amazon.awssdk:bom:2.17.230')
	implementation 'software.amazon.awssdk:s3'

	// test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
	useJUnitPlatform()
}
